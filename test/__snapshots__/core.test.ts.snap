// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transform 1`] = `
Object {
  "code": "type temp = string;
type func<T> = {
  a: T;
};",
}
`;

exports[`transform: backtrace 1`] = `
"{
    \\"message\\": \\"Expected end of input but \\\\\\"t\\\\\\" found.\\",
    \\"location\\": {
        \\"start\\": {
            \\"offset\\": 44,
            \\"line\\": 3,
            \\"column\\": 13
        },
        \\"end\\": {
            \\"offset\\": 45,
            \\"line\\": 3,
            \\"column\\": 14
        }
    },
    \\"stack\\": \\"SyntaxError: Expected end of input but \\\\\\"t\\\\\\" found.\\\\n    at peg$buildStructuredError (eval at compile (D:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\pegjs\\\\\\\\lib\\\\\\\\compiler\\\\\\\\index.js:67:29), <anonymous>:665:14)\\\\n    at Object.peg$parse [as parse] (eval at compile (D:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\pegjs\\\\\\\\lib\\\\\\\\compiler\\\\\\\\index.js:67:29), <anonymous>:5418:13)\\\\n    at Parser.parse (D:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\react-peg\\\\\\\\build\\\\\\\\renderer\\\\\\\\renderer.js:65:37)\\\\n    at Object.transform (D:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\src\\\\\\\\core\\\\\\\\core.tsx:21:28)\\\\n    at Object.<anonymous> (D:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\test\\\\\\\\core.test.ts:13:9)\\\\n    at Object.asyncJestTest (d:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\jest-jasmine2\\\\\\\\build\\\\\\\\jasmineAsyncInstall.js:102:37)\\\\n    at d:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\jest-jasmine2\\\\\\\\build\\\\\\\\queueRunner.js:43:12\\\\n    at new Promise (<anonymous>)\\\\n    at mapper (d:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\jest-jasmine2\\\\\\\\build\\\\\\\\queueRunner.js:26:19)\\\\n    at d:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\jest-jasmine2\\\\\\\\build\\\\\\\\queueRunner.js:73:41\\",
    \\"backtrace\\": \\"No backtrace found. Make sure you use \`pegjs --trace\` to build your parser javascript.\\\\nOr, the failure might occur in the start node.\\"
}"
`;

exports[`transform: backtrace 2`] = `
"{
    \\"message\\": \\"Expected end of input but \\\\\\"t\\\\\\" found.\\",
    \\"location\\": {
        \\"start\\": {
            \\"offset\\": 44,
            \\"line\\": 3,
            \\"column\\": 13
        },
        \\"end\\": {
            \\"offset\\": 45,
            \\"line\\": 3,
            \\"column\\": 14
        }
    },
    \\"stack\\": \\"SyntaxError: Expected end of input but \\\\\\"t\\\\\\" found.\\\\n    at peg$buildStructuredError (eval at compile (D:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\pegjs\\\\\\\\lib\\\\\\\\compiler\\\\\\\\index.js:67:29), <anonymous>:720:14)\\\\n    at Object.peg$parse [as parse] (eval at compile (D:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\pegjs\\\\\\\\lib\\\\\\\\compiler\\\\\\\\index.js:67:29), <anonymous>:6969:13)\\\\n    at Parser.parse (D:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\react-peg\\\\\\\\build\\\\\\\\renderer\\\\\\\\renderer.js:65:37)\\\\n    at Object.transform (D:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\src\\\\\\\\core\\\\\\\\core.tsx:21:28)\\\\n    at Object.<anonymous> (D:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\test\\\\\\\\core.test.ts:22:9)\\\\n    at Object.asyncJestTest (d:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\jest-jasmine2\\\\\\\\build\\\\\\\\jasmineAsyncInstall.js:102:37)\\\\n    at d:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\jest-jasmine2\\\\\\\\build\\\\\\\\queueRunner.js:43:12\\\\n    at new Promise (<anonymous>)\\\\n    at mapper (d:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\jest-jasmine2\\\\\\\\build\\\\\\\\queueRunner.js:26:19)\\\\n    at d:\\\\\\\\workspace\\\\\\\\typetype\\\\\\\\node_modules\\\\\\\\jest-jasmine2\\\\\\\\build\\\\\\\\queueRunner.js:73:41\\",
    \\"backtrace\\": \\"x 3:38-3:38 MultiLineComment\\\\n|             type function func = (T) = {a: T}\\\\n|                                      ^\\\\no 3:37-3:38 _\\\\n|             type function func = (T) = {a: T}\\\\n|                                     ^\\\\nx 3:34-3:34 TypeArrowFunctionExpression\\\\n|             type function func = (T) = {a: T}\\\\n|                                  ^\\\\nx 3:27-3:27 TypeFunctionDeclarator\\\\n|             type function func = (T) = {a: T}\\\\n|                           ^\\\\nx 3:13-3:13 TypeFunctionDeclaration\\\\n|             type function func = (T) = {a: T}\\\\n|             ^\\\\no 1:1-3:13 TypeFile\\\\n  \\\\n  \\\\n              type temp = string\\\\n              type function func = (T) = {a: T}\\\\n  ^^^^^^^^^^^^\\"
}"
`;
