{
    "kind": "TypeVariableDeclaration",
    "declarator": {
        "kind": "TypeVariableDeclarator",
        "name": {
            "kind": "Identifier",
            "name": "result"
        },
        "initializer": {
            "kind": "TypeArrowFunctionExpression",
            "params": [],
            "body": {
                "kind": "ConditionalTypeExpression",
                "body": {
                    "kind": "TypeIfStatement",
                    "condition": {
                        "kind": "ExtendsClause",
                        "checkType": {
                            "kind": "StringType",
                            "value": "string"
                        },
                        "extendsType": {
                            "kind": "StringType",
                            "value": "string"
                        }
                    },
                    "consequent": {
                        "kind": "TypeReturnStatement",
                        "argument": {
                            "kind": "StringType",
                            "value": "string"
                        }
                    },
                    "alternate": {
                        "kind": "TypeReturnStatement",
                        "argument": {
                            "kind": "NumberType",
                            "value": "number"
                        }
                    }
                }
            }
        }
    }
}